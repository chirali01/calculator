#include <iostream>
#include <vector>

void displayBoard(const std::vector<char>& board);
bool checkWin(const std::vector<char>& board, char player);
bool checkDraw(const std::vector<char>& board);
void playerMove(std::vector<char>& board, char player);
void switchPlayer(char& currentPlayer);
bool playAgain();

int main() {
    std::vector<char> board(9, ' '); 
    char currentPlayer = 'X';
    bool gameOngoing = true;

    std::cout << "Welcome to Tic-Tac-Toe!" << std::endl;

    while (gameOngoing) {
        displayBoard(board);
        playerMove(board, currentPlayer);

        if (checkWin(board, currentPlayer)) {
            displayBoard(board);
            std::cout << "Player " << currentPlayer << " wins!" << std::endl;
            gameOngoing = false;
        } else if (checkDraw(board)) {
            displayBoard(board);
            std::cout << "The game is a draw!" << std::endl;
            gameOngoing = false;
        } else {
            switchPlayer(currentPlayer);
        }

        if (!gameOngoing && playAgain()) {
            board.assign(9, ' ');
            currentPlayer = 'X';
            gameOngoing = true;
        }
    }

    return 0;
}

void displayBoard(const std::vector<char>& board) {
    std::cout << "\n";
    std::cout << " " << board[0] << " | " << board[1] << " | " << board[2] << "\n";
    std::cout << "---|---|---\n";
    std::cout << " " << board[3] << " | " << board[4] << " | " << board[5] << "\n";
    std::cout << "---|---|---\n";
    std::cout << " " << board[6] << " | " << board[7] << " | " << board[8] << "\n";
    std::cout << "\n";
}

bool checkWin(const std::vector<char>& board, char player) {
    const int winPatterns[8][3] = {
        {0, 1, 2}, {3, 4, 5}, {6, 7, 8},
        {0, 3, 6}, {1, 4, 7}, {2, 5, 8}, 
        {0, 4, 8}, {2, 4, 6}             
    };

    for (const auto& pattern : winPatterns) {
        if (board[pattern[0]] == player && board[pattern[1]] == player && board[pattern[2]] == player) {
            return true;
        }
    }

    return false;
}

bool checkDraw(const std::vector<char>& board) {
    for (const auto& cell : board) {
        if (cell == ' ') {
            return false;
        }
    }
    return true;
}

void playerMove(std::vector<char>& board, char player) {
    int move;
    while (true) {
        std::cout << "Player " << player << ", enter your move (1-9): ";
        std::cin >> move;
        move--; 

        if (move >= 0 && move < 9 && board[move] == ' ') {
            board[move] = player;
            break;
        } else {
            std::cout << "Invalid move. Try again." << std::endl;
        }
    }
}

void switchPlayer(char& currentPlayer) {
    currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
}

bool playAgain() {
    char choice;
    std::cout << "Do you want to play again? (y/n): ";
    std::cin >> choice;
    return (choice == 'y' || choice == 'Y');
}
